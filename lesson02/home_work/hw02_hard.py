from datetime import datetime as dt
__author__ = 'Povalyaev Ivan'

# Задание-1: уравнение прямой вида y = kx - b задано ввиде строки.
# Определить координату y, точки с заданной координатой x
# вычислите и выведите y


def get_equation_value(equation, x):
    parted_equation = equation.split('=')[1].split('+')
    k_coefficient = float(parted_equation[0].split('x')[0].strip())
    b_coefficient = float(parted_equation[1].strip())
    y_value = k_coefficient * x + b_coefficient
    return 'y = {}'.format(y_value)


# Задание-2: Дата задана в виде строки формата 'dd.mm.yyyy'.
# Проверить, корректно ли введена дата.
# Условия корректности:
# 1. День должен приводиться к целому числу в диапазоне от 1 до 30(31)
# (в зависимости от месяца, февраль не учитываем)
# 2. Месяц должен приводиться к целому числу в диапазоне от 1 до 12
# 3. Год должен приводиться к целому положительному числу
# в диапазоне от 1 до 9999
# 4. Длина исходной строки для частей должна быть в соответствии с форматом
# (т.е. 2 - для дня, 2- месяц, 4 -год)

def correct_date(date):
    if len(date) == 10:
        try:
            dt.strptime(date, '%d.%m.%Y')
            return '{} - корректная дата'.format(date)
        except ValueError:
            return '{} - некорректная дата'.format(date)
    else:
        return '{} - некорректная дата'.format(date)


# Задание-3: "Перевернутая башня" (Задача олимпиадного уровня)
#
# Вавилонцы решили построить удивительную башню — расширяющуюся к верху
# и содержащую бесконечное число этажей и комнат.
# Она устроена следующим образом — на первом этаже одна комната,
# затем идет два этажа,
# на каждом из которых по две комнаты, затем идёт три этажа,
# на каждом из которых по три комнаты и так далее:
#         ...
#     12  13  14
#     9   10  11
#     6   7   8
#       4   5
#       2   3
#         1
#
# Эту башню решили оборудовать лифтом --- и вот задача:
# нужно научиться по номеру комнаты определять,
# на каком этаже она находится и какая она по счету слева на этом этаже.
#
# Входные данные: В первой строчке задан номер
# комнаты N, 1 ≤ N ≤ 2 000 000 000.
#
# Выходные данные:  Два целых числа — номер этажа и
# порядковый номер слева на этаже.
#
# Пример:
# Вход: 13
# Выход: 6 2
#
# Вход: 11
# Выход: 5 3

def get_floor_and_order(flat):
    pass


if __name__ == '__main__':
    equation = 'y = -12x + 11111140.2121'
    x = 2.5
    print(get_equation_value(equation, x))
    print(correct_date('01.11.1985'))
    print(correct_date('01.22.1001'))
    print(correct_date('1.12.1001'))
    print(correct_date('-2.10.3001'))
    print(get_floor_and_order(1))
    print(get_floor_and_order(13))
    print(get_floor_and_order(4))
